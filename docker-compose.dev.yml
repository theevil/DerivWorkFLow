# Docker Compose for Development - Fast Startup Version
# Use this for faster development without AI features
# Run with: docker-compose -f docker-compose.dev.yml up -d

services:
  mongodb:
    image: mongo:7
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: ./apps/backend
    env_file:
      - ./apps/backend/.env
    environment:
      - ENVIRONMENT=development
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=deriv
      - SECRET_KEY=your-super-secret-key-change-in-production-docker
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # AI Features Disabled for faster startup
      - LOCAL_AI_ENABLED=false
      - DEFAULT_AI_MODEL=none
      # WebSocket Configuration
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_MAX_CONNECTIONS=100
      - WEBSOCKET_HEARTBEAT_INTERVAL=60
      - WEBSOCKET_CONNECTION_TIMEOUT=30
      - WEBSOCKET_MAX_RETRY_ATTEMPTS=3
      # Circuit Breaker Configuration
      - CIRCUIT_BREAKER_ENABLED=true
      - WEBSOCKET_CB_FAILURE_THRESHOLD=3
      - WEBSOCKET_CB_RECOVERY_TIMEOUT=30
      - API_CB_FAILURE_THRESHOLD=10
      - API_CB_RECOVERY_TIMEOUT=120
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '8000:8000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  celery-worker:
    build:
      context: ./apps/backend
    env_file:
      - ./apps/backend/.env
    environment:
      - ENVIRONMENT=development
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=deriv
      - SECRET_KEY=your-super-secret-key-change-in-production-docker
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # AI Features Disabled for faster startup
      - LOCAL_AI_ENABLED=false
      - DEFAULT_AI_MODEL=none
      # WebSocket Configuration
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_MAX_CONNECTIONS=100
      - WEBSOCKET_HEARTBEAT_INTERVAL=60
      - WEBSOCKET_CONNECTION_TIMEOUT=30
      - WEBSOCKET_MAX_RETRY_ATTEMPTS=3
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.workers.celery_app worker --loglevel=info --queues=market_scan,position_monitor,trading,risk_monitor,signals,training,analysis

  celery-beat:
    build:
      context: ./apps/backend
    env_file:
      - ./apps/backend/.env
    environment:
      - ENVIRONMENT=development
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=deriv
      - SECRET_KEY=your-super-secret-key-change-in-production-docker
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # AI Features Disabled for faster startup
      - LOCAL_AI_ENABLED=false
      - DEFAULT_AI_MODEL=none
      # WebSocket Configuration
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_MAX_CONNECTIONS=100
      - WEBSOCKET_HEARTBEAT_INTERVAL=60
      - WEBSOCKET_CONNECTION_TIMEOUT=30
      - WEBSOCKET_MAX_RETRY_ATTEMPTS=3
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.workers.celery_app beat --loglevel=info

  frontend:
    working_dir: /app
    image: node:20-alpine
    volumes:
      - ./apps/frontend:/app
    command: sh -c "npm install && npm run dev -- --host"
    ports:
      - '3000:3000'
    environment:
      # WebSocket Configuration
      - VITE_WS_URL=ws://localhost:8000/api/v1/ws
      - VITE_WS_RECONNECT_ATTEMPTS=5
      - VITE_WS_RECONNECT_INTERVAL=3000
      - VITE_ENABLE_REAL_TIME_UPDATES=true
      - VITE_WEBSOCKET_FALLBACK_ENABLED=true
    depends_on:
      backend:
        condition: service_started

volumes:
  mongo_data:
  redis_data:
